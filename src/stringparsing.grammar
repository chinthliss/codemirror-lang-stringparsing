

@top Document { (validCharWithoutOpenScript | script )* }

scriptOrText { (validCharWithoutScript | script )* }

scriptOrNumber { (Number | script+) }

script { ( controlWords | comments | commands | lookupFunctions | utilityFunctions | math ) }

controlWords[@isGroup=lookup] {
  If | End | OneOf
}

comments[@isGroup=comment] { Comment | Description }

commands[@isGroup=command] { IncreaseStat | Kill | SetStat | SetStatus | Impregnate | FillPart | TalkScript }

lookupFunctions[@isGroup=lookup] {
  PlayerName | LookerName | VictorName | LoserName | OwnerName | HereName | CommandName | SkinShortDescription | CockShortDescription | CuntShortDescription | PresentArea | EnvironmentHeat | EnvironmentCold | EnvironmentWater | EnvironmentNanite | PronounOf | SizeOf | SkinOf | CockOf | CuntOf | LengthOf | FormattedLengthOf | NumberOf | DailyCumOf | DailyMilkOf | AdjectiveSizeOf | DescriptionPartOf | TransformDescriptionPartOf | HpOf | InfectionPartsOf | StatusMagnitudeOf | StatOf | LocalStatOf | AccountStatOf | FeralModeOf | CityStat | WeatherValue | MoonPhase
}

utilityFunctions[@isGroup=lookup] {
  LowerCase | UpperCase | PresentYear | PresentMonth | PresentDay | PresentWeekday | PresentHour | PresentMinute | PresentTimestamp | RandomNumber
}

math[@isGroup=math] { Addition | Subtraction | Multiplication | Division | Modulo | Power | Min | Max }

// Control / Logic
If { "[if " IfTest "]" IfTrue ("[else if " IfTest "]" IfTrue)* ("[else]" IfFalse)? "[end if]" }
IfTest { scriptOrText }
IfTrue { scriptOrText }
IfFalse { scriptOrText }

OneOf { "[one of]" (scriptOrText "[or]")+ scriptOrText "[at random]" }

// End block, for multiline?
End { "[end]" }


// Math
Addition       { "[+ " (scriptOrNumber " ")+ "+]" }
Subtraction    { "[- " (scriptOrNumber " ")+ "-]" }
Multiplication { "[* " (scriptOrNumber " ")+ "*]" }
Division       { "[/ " (scriptOrNumber " ")+ "/]" }
Modulo         { "[% " (scriptOrNumber " ")+ "%]" }
Power          { "[^ " (scriptOrNumber " ")+ "^]" }
Min            { "[< " (scriptOrNumber " ")+ "<]" }
Max            { "[> " (scriptOrNumber " ")+ ">]" }

// Comments
Comment { "[comment=" matchUntilNextCloseScript "]" }
Description { "[description="  matchUntilNextCloseScript "]" }

// Simple lookups with no parameters
PlayerName { "[player]" }
LookerName { "[looker]" }
VictorName { "[victor]" }
LoserName { "[loser]" }
OwnerName { "[owner]" }
HereName { "[here]" }
CommandName { "[command]" }
SkinShortDescription { "[skin]" }
CockShortDescription { "[cock]" }
CuntShortDescription { "[cunt]" }
PresentArea { "[area]" }
EnvironmentHeat { "[heat]" }
EnvironmentCold { "[cold]" }
EnvironmentWater { "[water]" }
EnvironmentNanite { "[nanite]" }

// Lookups with parameters
PronounOf { pronounOfStart " of " validTargets "]" }
SizeOf { "[size of " validTargets "]" }
SkinOf { "[skin of " validTargets "]" }
CockOf { "[cock of " validTargets "]" }
CuntOf { "[cunt of " validTargets "]" }
LengthOf { lengthOfStart " of " validTargets "]" }
FormattedLengthOf { "[formatted " allBodyParts " length of " validTargets "]" }
NumberOf { "[number of " allBodyParts "s of " validTargets "]" }
DailyCumOf { "[daily cum amount of " validTargets "]" }
DailyMilkOf { "[daily milk amount of " validTargets "]" }
AdjectiveSizeOf { adjectiveSizeOfStart " size of "  validTargets "]" }
DescriptionPartOf { "[desc " mutableBodyParts " of " scriptOrText "]" }
TransformDescriptionPartOf { "[transform " mutableBodyParts " of " scriptOrText "]" }
HpOf { "[hp of " validTargets "]" }
InfectionPartsOf {"[the infection " scriptOrText " of " validTargets "]" }
StatusMagnitudeOf { "[status " scriptOrText " of " validTargets "]" }
StatOf { "[stat " scriptOrText " of " validTargets "]" }
LocalStatOf { "[lstat " scriptOrText " of " validTargets "]" }
AccountStatOf { "[account stat " scriptOrText "]" }
FeralModeOf { "[feral mode of " validTargets "]" }
CityStat { "[city stat " scriptOrText "]" }
WeatherValue { "[weather " ( "id" | "dt" | "name" | "coord-lat" | "coord-lon" | "sys-country" | "sys-sunrise" | "sys-sunset" | "main-temp" | "main-temp_min" | "main-temp_max" | "main-pressure" | "main-sea_level" | "main-grnd_level" | "wind-speed" | "wind-deg" | "wind-gust" | "clouds-all" | "weather-id" | "weather-main" | "weather-description" | "weather-icon" | "rain-1h" | "rain-3h" | "snow-1h" | "snow-3h" ) "]"  }
MoonPhase { "[moon phase" " capitalized"? "]" }

// Utilities
LowerCase { "[lowercase " scriptOrText "]" }
UpperCase { "[uppercase " scriptOrText "]" }
RandomNumber { "[random " scriptOrText " to " scriptOrText "]" }
PresentYear { "[year]" }
PresentMonth { "[month]" }
PresentDay { "[day]" }
PresentWeekday { "[weekday]" }
PresentHour { "[hour]" }
PresentMinute { "[minute]" }
PresentTimestamp { "[systime]" }

// Commands
SetStat { "[set the " scriptOrText " of " Target " to " scriptOrNumber "]" }
SetStatus { "[set " scriptOrText " status of " Target " to " scriptOrNumber " mag for " Number " rounds]" }
IncreaseStat { "[increase the " scriptOrText " of " Target " by " Number "]" }
Kill { "[kill " scriptOrText "]" }
Impregnate { "[impregnate " Target " with " Target "]" }
FillPart { "[fill the " fillableBodyParts " of " Target " by " Number "]" }
TalkScript { "[talk " scriptOrText " of " Target "]" }

// Parameters
validTargets { ( Player | Looker | Victor | Loser ) | scriptOrText }
Player[@isGroup=parameter] { "player" }
Looker[@isGroup=parameter] { "looker" }
Victor[@isGroup=parameter] { "victor" }
Loser[@isGroup=parameter] { "loser" }

Target[@isGroup=parameter] { validTargets }
Number[@isGroup=parameter] { number }

@tokens {
  validCharWithoutOpenScript { $[\n\x20-\x5a\x5c-\x7f] }
  validCharWithoutScript { $[\n\x20-\x5a\x5c\x5e-\x7f] }
  matchUntilNextCloseScript { ![\]\n]+ } // For comment blocks
  number { @digit+ }
  
  //These ones get a token so they don't match with a single [
  lengthOfStart { "[" allBodyParts " length" }
  adjectiveSizeOfStart { "[" ( "breast" | "cock" | "cunt" ) }

  //Pronounces get a token to avoid confusing them with math.modulo
  pronounOfStart { "[%" ('a' | 'A' | 's'| 'S'| 'o'| 'O'| 'p'| 'P'| 'r'| 'R') }

  allBodyParts { "torso" | "head" | "arm" | "leg" | "foot" | "hand" | "wing" | "tail" | "cock" | "cunt" | "ball" | "breast" | "clit" | "udder" | "teat" }
  mutableBodyParts { "arms" | "ass" | "head" | "legs" | "skin" | "torso" | "cock"}
  fillableBodyParts { "ass" | "balls" | "bladder" | "breasts" | "foot" | "hand" | "mouth" | "nipple" }
}

@external propSource stringParsingHighlighting from "./highlight"

@detectDelim