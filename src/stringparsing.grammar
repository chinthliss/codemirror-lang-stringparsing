@top StringParsing { (validCharacter | whitespace | script)* }

script {
  lookup | math | command
}

lookup[@isGroup=lookup] {
  PlayerName | LookerName | VictorName | LoserName | OwnerName | HereName | CommandName | SkinShortDescription | CockShortDescription | CuntShortDescription | PronounOf | SizeOf | SkinOf | CockOf | CuntOf | LengthOf | FormattedLengthOf | NumberOf | DailyCumOf | DailyMilkOf | AdjectiveSizeOf | DescriptionPartOf | TransformDescriptionPartOf | HpOf | InfectionPartsOf | StatusMagnitudeOf | EnvironmentModifier | CityStat | DateTime | MoonPhase | PresentArea
}

math[@isGroup=math] { Addition | Subtraction | Multiplication | Division | Modulo | Power | Min | Max }

command[@isGroup=command] { TalkScript }

Addition { additionStart (numberOrScript " ")+ "+]" }
Subtraction { subtractionStart (numberOrScript " ")+ "-]" }
Multiplication { multiplicationStart (numberOrScript " ")+ "*]" }
Division { divisionStart (numberOrScript " ")+ "/]" }
Modulo { moduloStart (numberOrScript " ")+ "%]" }
Power { powerStart (numberOrScript " ")+ "^]" }
Min { minStart (numberOrScript " ")+ "<]" }
Max { maxStart (numberOrScript " ")+ ">]" }

numberOrScript { (Number | script) }
Number { number+ }

@tokens {
  // Name lookups
  PlayerName { openScript "player" closeScript }
  LookerName { openScript "looker" closeScript }
  VictorName { openScript "victor" closeScript }
  LoserName { openScript "loser" closeScript }
  OwnerName { openScript "owner" closeScript }
  HereName { openScript "here" closeScript }

  // Other single lookups
  CommandName { openScript "command" closeScript }
  SkinShortDescription { openScript "skin" closeScript }
  CockShortDescription { openScript "cock" closeScript }
  CuntShortDescription { openScript "cunt" closeScript }

  // Targeted lookups
  PronounOf { openScript "%" $[aAsSoOpPrR] " of " validTargets closeScript }
  SizeOf { openScript "size of " validTargets closeScript }
  SkinOf { openScript "skin of " validTargets closeScript }
  CockOf { openScript "cock of " validTargets closeScript }
  CuntOf { openScript "cunt of " validTargets closeScript }
  LengthOf { openScript allBodyParts " length of " validTargets closeScript }
  FormattedLengthOf { openScript "formatted " allBodyParts " length of " validTargets closeScript }
  NumberOf { openScript "number of " allBodyParts "s of " validTargets closeScript }
  DailyCumOf { openScript "daily cum amount of " validTargets closeScript }
  DailyMilkOf { openScript "daily milk amount of " validTargets closeScript }
  AdjectiveSizeOf { openScript ( "breast" | "cock" | "cunt" ) " size of " validTargets closeScript }
  DescriptionPartOf { openScript "desc " mutableBodyParts " of " textWithSpaces closeScript }
  TransformDescriptionPartOf { openScript "transform " mutableBodyParts " of " textWithSpaces closeScript }
  HpOf { openScript "hp of " validTargets closeScript }
  InfectionPartsOf { openScript "the infection " textWithSpaces " of " validTargets closeScript }
  StatusMagnitudeOf { openScript "status " textWithSpaces " of " validTargets closeScript }

  @precedence { DescriptionPartOf, TransformDescriptionPartOf, CityStat, validCharacter }

  // Other functions
  EnvironmentModifier { openScript ( "heat" | "cold" | "water" | "nanite" ) closeScript }
  CityStat { openScript "city stat " textWithSpaces closeScript }
  PresentArea { openScript "area" closeScript }
  DateTime { openScript ( "year" | "month" | "day" | "weekday" | "hour" | "minute" | "systime" ) closeScript }
  MoonPhase { openScript "moon phase" " capitalized"? closeScript }

  // Math - all done separately for different names and because the end token has to match the start token
  additionStart { openScript "+ "}
  subtractionStart { openScript "- "}
  multiplicationStart { openScript "* "}
  divisionStart { openScript "/ "}
  moduloStart { openScript "% "}
  powerStart { openScript "^ "}
  minStart { openScript "< "}
  maxStart { openScript "> "}

  // Commands
  TalkScript { openScript "talk " textWithSpaces " of " validTargets closeScript }

  // Underlying things
  validTargets { "["? ( "player" | "looker" | "victor" | "loser" ) "]"? }
  allBodyParts { "torso" | "head" | "arm" | "leg" | "foot" | "hand" | "wing" | "tail" | "cock" | "cunt" | "ball" | "breast" | "clit" | "udder" | "teat" }
  mutableBodyParts { "arms" | "ass" | "head" | "legs" | "skin" | "torso" | "cock"}
  fillableBodyParts { "ass" | "balls" | "bladder" | "breasts" | "foot" | "hand" | "mouth" | "nipple" }
  validCharacter { $[\x21-\x7e] }
  textWithSpaces { ( " " | validCharacter)+ }
  whitespace { " " | "\n" }
  number { @digit+ }
  openScript[closedBy=closeScript] { "[" }
  closeScript[openedBy=openScript] { "]" }

  @precedence { mathStart, openScript, closeScript, validCharacter }
}

@external propSource stringParsingHighlighting from "./highlight"

@detectDelim